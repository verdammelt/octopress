<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Clojure | Code And Cocktails]]></title>
  <link href="http://code-and-cocktails.heroku.com/blog/categories/clojure/atom.xml" rel="self"/>
  <link href="http://code-and-cocktails.heroku.com/"/>
  <updated>2020-10-21T10:10:43-04:00</updated>
  <id>http://code-and-cocktails.heroku.com/</id>
  <author>
    <name><![CDATA[Mark Simpson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Clojure Project 'Reloaded' Pattern Gotcha]]></title>
    <link href="http://code-and-cocktails.heroku.com/blog/2015/03/19/clojure-project-reloaded-pattern-gotcha/"/>
    <updated>2015-03-19T11:04:01-04:00</updated>
    <id>http://code-and-cocktails.heroku.com/blog/2015/03/19/clojure-project-reloaded-pattern-gotcha</id>
    <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2>

<p>Ensure that <code>user.clj</code> does not contain dependencies (even transitive)
upon code that needs to be compiled. This file is loaded well before
Leiningen is started enough to compile files.</p>

<h2 id="problem-description">Problem Description</h2>

<p>In my latest learning project with Clojure I decided to try Stuart
Sierra’s Reloaded project pattern<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup>. I liked the idea of this
project pattern because it promised to make the REPL driven
development on a web application smoother. Things were going smoothly
as I worked on simple dummy pages for my little application. However
when I connected the data file parsing code with its custom exception
to the application I started getting compilation and class not found
errors related to the custom exception. The reason for this is a
rather simple one - but was difficult for me to find information on or
figure out.</p>

<p>First an aside about custom exceptions. It seems that in the Clojure
community that custom exceptions are avoided<sup id="fnref:2"><a href="#fn:2" class="footnote">2</a></sup>. Either one of the
built-in Java exceptions, <code>ex-info</code><sup id="fnref:3"><a href="#fn:3" class="footnote">3</a></sup> or Slingshot<sup id="fnref:4"><a href="#fn:4" class="footnote">4</a></sup> is used
instead. However it had been my favored approach to create a
domain-specific exception for my application’s needed, so I stumbled
forward and learned how to do it. It was relatively simple by using
the <code>:gen-class</code> option of <code>ns</code> and the <code>:aot</code> feature of Leiningen.
And it worked well… until I connected the code using the exception
with the web application that was implemented in the reloaded pattern.</p>

<p>A big part of the reloaded pattern is the use of functions in
<code>user.clj</code> to start and stop the system. This file is loaded by
Clojure whenever it is started<sup id="fnref:5"><a href="#fn:5" class="footnote">5</a></sup> so it is perfect for functionality
wanted in a REPL. This file is kept in a directory which is only
included in the class path when the <code>dev</code> profile is used (the <code>repl</code>
and <code>compile</code> tasks use the <code>dev</code> profile by default).</p>

<p>Everything is fine until the code in <code>user.clj</code> depends upon (even
transitively) code which must be compiled (such as custom exceptions).
Then we hit a annoying chicken-and-egg problem<sup id="fnref:6"><a href="#fn:6" class="footnote">6</a></sup> wherein Leiningen
when trying to compile (or launch the REPL) naturally starts Clojure,
which in turn loads <code>user.clj</code> which in turn depends upon code that
needs to be compiled. The error that is reported says that the
compiled class cannot be found.</p>

<h2 id="the-confusion">The Confusion</h2>

<p>This error led me to first think that my custom exception was not
written properly and thus wasn’t being compiled, then I thought it was
a problem of the <code>:aot</code> feature in Leiningen and interaction with the
<code>dev</code> profile. But the problem was more fundamental. It was just my
sort of luck that kept me from finding the answer until I spent hours
debugging and researching. Now it is easy to find several reports of
this problem<sup id="fnref:7"><a href="#fn:7" class="footnote">7</a></sup>. It is not a Leiningen problem, not a Clojure
problem, not a reloaded pattern problem, but an annoyingly unfortunate
interaction between them.</p>

<h2 id="the-workaround">The Workaround</h2>

<p>Luckily, once the problem was identified, there is a relatively easy
workaround. I took the parts of <code>user.clj</code> which depended upon the
custom exception and moved those to a new file <code>reloaded.clj</code> which is
then loaded when the REPL starts by using the <code>:repl-options</code>
configuration in <code>project.clj</code>. <code>:repl-options</code> as a <code>:init</code>
configuration which can contain an expression which is evaluated when
the REPL is starting. I set it to <code>(load "reloaded")</code>.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>http://thinkrelevance.com/blog/2013/06/04/clojure-workflow-reloaded <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>http://tinyurl.com/o5kn5av <a href="#fnref:2" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p>https://clojuredocs.org/clojure.core/ex-info <a href="#fnref:3" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:4">
      <p>https://github.com/scgilardi/slingshot/blob/master/README.md <a href="#fnref:4" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:5">
      <p>http://dev.solita.fi/2014/03/18/pimp-my-repl.html <a href="#fnref:5" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:6">
      <p>https://en.wikipedia.org/wiki/Chicken_or_the_egg <a href="#fnref:6" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:7">
      <p>https://github.com/technomancy/leiningen/issues/1245,
  https://github.com/technomancy/leiningen/issues/1477,
  https://github.com/technomancy/leiningen/issues/1764,
  https://github.com/technomancy/leiningen/issues/1787 <a href="#fnref:7" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>

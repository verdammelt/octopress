<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | Code And Cocktails]]></title>
  <link href="http://code-and-cocktails.heroku.com/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://code-and-cocktails.heroku.com/"/>
  <updated>2020-10-29T14:29:22-04:00</updated>
  <id>http://code-and-cocktails.heroku.com/</id>
  <author>
    <name><![CDATA[Mark Simpson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Quick Review of 20 years of 'Professional' programming]]></title>
    <link href="http://code-and-cocktails.heroku.com/blog/2012/06/20/quick-review-of-20-years-of-professional-programming/"/>
    <updated>2012-06-20T21:00:00-04:00</updated>
    <id>http://code-and-cocktails.heroku.com/blog/2012/06/20/quick-review-of-20-years-of-professional-programming</id>
    <content type="html"><![CDATA[<p>In May 1992 I graduated with a Bachelor of Science in Computer Science from
<a href="http://www.wpi.edu/" title="My alma mater">WPI</a>. That means that I’ve been a ‘<em>professional</em>’ programmer for a little
bit over 20 years.  I have to say that while on the whole it has been good I
regret some things.</p>

<p>Firstly, I think I got a good education from WPI.  However I wish I had taken
it onto myself to get a <em>better</em> education.  I didn’t extend myself enough, I
didn’t really dig into things as much as I could have. I got good grades and
left it at that.  This is a regret of mine.</p>

<p>Nextly, upon graduating, I got some jobs and things went well. I fell into
thinking that I knew what I was doing.  I think I was, while cocksure, still a
bit better than the average programmer of the time with equal experience.  But
it was during this approximately 10-15 year period where I fell into a lull. I
thought I was good and I never did too much extra-curricular research. I did
have a small piece of <a href="http://sourceforge.net/projects/tnef/">free software</a> that I worked on during this time</p>
<ul>
  <li>but that didn’t really stretch my abilities. The work I was doing at work
was good - but again not stretching my abilities.</li>
</ul>

<p>During this time I only remember going to a single ‘conference’. That was when
the local <a href="http://www.acm.org">ACM</a> chapter in <a href="http://www.gbcacm.org/">Boston</a> brought in one of the 
<a href="http://en.wikipedia.org/wiki/Gang_of_Four_(software)">Gang of Four</a> to talk about their book. I distinctly remember that during the
lunch I was so shy/awkward that I felt like never attending anything like this
again.</p>

<p>Sometime during the last 5-10 years I started to become dissatisfied with how
software projects were being run and how quality, my own and other developers
was being handled.  Sometime during this time period I was exposed to Agile
methodologies. Perhaps the time was just ‘right’, but for whatever reason
instead of just sitting around and accepting things I did a lot of research, I
started reading blogs, I started trying things out for myself, I even went to
conferences and made some good connections with people.</p>

<p>It was at this point I started to realized 1) how little I knew and 2) how
much I had forgotten.</p>

<p>This is where I am now. I am trying to turn myself around and learn more and
all the time.</p>

<p>I hope my next 20 years of programming (because I plan on coding (maybe not
always for pay) until I die) will not find myself falling into another rut…</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Seven Deadly Sins of Programming]]></title>
    <link href="http://code-and-cocktails.heroku.com/blog/2012/05/14/seven-deadly-sins-of-programming/"/>
    <updated>2012-05-14T22:14:00-04:00</updated>
    <id>http://code-and-cocktails.heroku.com/blog/2012/05/14/seven-deadly-sins-of-programming</id>
    <content type="html"><![CDATA[<p>At tonight’s Boston Software Craftstmanship meetup I presented my lightning
talk: Seven Deadly Sins of Programming. It is a half baked idea - take it with
a grain of salt.</p>

<p>Attached are the <a href="assets/deadlysins.pdf">PDF slides</a>.</p>

<p>The source code for the presentation (done in the <a href="http://en.wikipedia.org/wiki/Beamer_(LaTeX)">Beamer</a> package for
<a href="http://www.latex-project.org/">LateX</a>) is on <a href="https://github.com/verdammelt/SevenDeadlySins">my github</a>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[To Name a Thing is to have Power Over It.]]></title>
    <link href="http://code-and-cocktails.heroku.com/blog/2011/08/02/to-name-a-thing-is-to-have-power-over-it/"/>
    <updated>2011-08-02T00:00:00-04:00</updated>
    <id>http://code-and-cocktails.heroku.com/blog/2011/08/02/to-name-a-thing-is-to-have-power-over-it</id>
    <content type="html"><![CDATA[<p>(warning: an odd half-formed thought is contained herein[1])</p>

<ol>
<li>Yaweh let Adam name all the creatures in the world &ndash; this gave Adam
dominion over all the creatures.[2]</li>
<li>Medieval magicians believed that knowing the <em>name</em> of a thing would
give them power over that thing.[3]</li>
</ol>

<p>In software development we name things to keep tabs on them. To get a
handle on them. Without a name we can&rsquo;t refer to things &mdash; we can&rsquo;t move
things around &mdash; we can&rsquo;t organize them.</p>

<p>More importantly: to have the <strong>true name</strong> of a thing allows one to
have absolute control over it. Without the true name we don&rsquo;t have full
power.</p>

<p>Naming seems to be a special case of the power of language. With
language we have the power to communicate, to do things collaboratively.
Names let us do actions to things, and to collaborate on those actions.</p>

<p>Footnotes:</p>

<p>[1] In a discussion on Naming in the context of Software Craftsmanship I
made an odd statement linking naming in software with medieval magic and
the naming of all the creatures from the Judeo-Christian Genesis myth.
I thought I could expand it slightly here.</p>

<p>[2]  A mashup of the two Genesis myths (1:36 &amp; 2:20).</p>

<p>[3]  <a href="http://en.wikipedia.org/wiki/True_name">http://en.wikipedia.org/wiki/True_name</a>,
<a href="http://en.wikipedia.org/wiki/BSD_Daemon">http://en.wikipedia.org/wiki/BSD_Daemon</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Writing a Unit Test Framework in a Language You are Trying to Learn]]></title>
    <link href="http://code-and-cocktails.heroku.com/blog/2011/04/11/writing-a-unit-test-framework-in-a-language-y/"/>
    <updated>2011-04-11T00:00:00-04:00</updated>
    <id>http://code-and-cocktails.heroku.com/blog/2011/04/11/writing-a-unit-test-framework-in-a-language-y</id>
    <content type="html"><![CDATA[<p>Tonight's session of the Boston Software Craftsmanship[1] meetup was about <br />playing with the Io language[2]. I didn't know anything about it before <br />it was announced as the topic for the next meeting. <p /> A couple weeks ago I started googling and trying to learn the language. <br />I tried finding a unit testing framework given my interest in TDD, but <br />didn't find anything (my lack of ability to search for anything was a <br />trend here). So I decide to try writing one on my own. Perhaps I was <br />remembering Kent Beck's example of this in his book[3]. <p /> Even with my lack of search skills I feel that I learned some <br />interesting things about the language. I think if I spent more than <br />one and a half hours at it, and if my searching had been useful, I could <br />have gotten farther. <p /> I think that I will make this a pattern for me. Right after "Hello <br />World" I'll play with a unit testing framework. <p /> At the session tonight we ended up ganging up on my little framework and <br />taking some of the next steps to improve it. It may not grow anymore - <br />but it has served its purpose. <p /> My basic unit test framework for the Io language can be found on <br />github[4]. (But Io does seem to have its own unit test framework built <br />in, but it is hard to find (.../libs/iovm/io/UnitTest.io). <br />It is built right into the VM, use it instead of mine please). <p />  <br />Footnotes: [1] <a href="http://groups.google.com/group/boston-software-craftsmanship">http://groups.google.com/group/boston-software-craftsmanship</a> <p /> [2] <a href="http://iolanguage.com">http://iolanguage.com</a> <p /> [3] <a href="http://www.amazon.com/Test-Driven-Development-Kent-Beck/dp/0321146530">http://www.amazon.com/Test-Driven-Development-Kent-Beck/dp/0321146530</a> <p /> [4] <a href="https://github.com/verdammelt/iounit">https://github.com/verdammelt/iounit</a></p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: emacs | Code And Cocktails]]></title>
  <link href="http://code-and-cocktails.heroku.com/blog/categories/emacs/atom.xml" rel="self"/>
  <link href="http://code-and-cocktails.heroku.com/"/>
  <updated>2020-10-21T10:10:43-04:00</updated>
  <id>http://code-and-cocktails.heroku.com/</id>
  <author>
    <name><![CDATA[Mark Simpson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Initial Emacs Setup for React/ReactNative]]></title>
    <link href="http://code-and-cocktails.heroku.com/blog/2016/01/10/emacs-setup-for-react-slash-reactnative/"/>
    <updated>2016-01-10T16:09:42-05:00</updated>
    <id>http://code-and-cocktails.heroku.com/blog/2016/01/10/emacs-setup-for-react-slash-reactnative</id>
    <content type="html"><![CDATA[<p><small>(Cross posted to the <a href="http://www.cyrusinnovation.com/initial-emacs-setup-for-reactreactnative/">Cyrus Innovation Blog</a>)</small></p>

<p>It looks likely that I’ll be doing some ReactNative work soon so I
took some time to start setting up my Emacs environment. All my
relevant setup can be found in the
<a href="https://github.com/verdammelt/dotfiles/blob/master/.emacs.d/init-react.el">init-react.el file in my GitHub dotfiles repository</a>.
This is likely to change so the previous link may not match the code
below. The code below matches specifically the
<a href="https://github.com/verdammelt/dotfiles/commit/59e7728c3743961b49fcdd8012703c4a46b9ee65">initial version (59e7728)</a>.</p>

<p>Hereinbelow I will add more annotation to those already found in that
file along with snippets of code.</p>

<p>The first thing that needed to be set up was a mode for React code.
React code files can mix Javascript with HTML markup and it does not
appear that <code>js-mode</code> (the built-in JavaScript mode) handles that.
After a short Googling it looks like
<a href="http://web-mode.org/"><code>web-mode</code></a> is a mode that can handle it. After
some brief testing it does appear to work reasonably. It appears that
the React/ReactNative community has not decided to use <code>*.js</code> or
<code>*.jsx</code> as the extension for the code files and since <code>web-mode</code>
appears to handle JavaScript just fine I chose to use it in all cases.</p>

<pre><code class="language-lisp">(add-to-list 'auto-mode-alist '("\\.jsx?$" . web-mode))
</code></pre>

<p>The next thing I wanted to get set up was a linter. I thought this
especially important as React uses an ES6 dialect of JavaScript which I
am not entirely familiar with yet and a linter can help me “do the
right thing”. With a suggestion from a coworker (who has done some
React work) I chose <a href="http://eslint.org/">ESLint</a> with the
<a href="https://www.npmjs.com/package/eslint-config-airbnb">AirBnB</a>
configuration settings. These defaults prompted me to standardize on two
spaces for indentation. (Setting <code>js-indent-level</code> as js-mode is still
in use for JSON files.)</p>

<pre><code class="language-lisp">  (setq web-mode-markup-indent-offset 2
        web-mode-css-indent-offset 2
        web-mode-code-indent-offset 2)
  (setq js-indent-level 2)
</code></pre>

<p>Setting up the linter to run via <a href="http://www.flycheck.org/">flycheck</a>
took a small amount of work since I don’t like to install project
specific tools globally. (I know that this is contrary to current
mores, but I have been tripped up by global vs. local installations
before so I shy away from them when I can.)</p>

<p>First I needed to integrate NVM with Emacs so that Emacs could run
ESLint at all.</p>

<pre><code class="language-lisp">(require 'nvm)
(nvm-use (caar (last (nvm--installed-versions))))
</code></pre>

<p>(The choice to use the last version found is totally arbitrary. If and
when I get more versions of Node.js on my machine I’ll have to make a
more careful choice.)</p>

<p>Next I hooked into <a href="http://batsov.com/projectile/">projectile</a> to look
for a locally installed ESLint and use it if found. The
<code>projectile-after-switch-project-hook</code> functions are called <em>after</em>
Projectile has switched directories to the project so one can simply
check the project for the desired file.</p>

<pre><code class="language-lisp">(add-hook 'projectile-after-switch-project-hook 'mjs/setup-local-eslint)

(defun mjs/setup-local-eslint ()
    "If ESLint found in node_modules directory - use that for flycheck.
Intended for use in PROJECTILE-AFTER-SWITCH-PROJECT-HOOK."
    (interactive)
    (let ((local-eslint (expand-file-name "./node_modules/.bin/eslint")))
      (setq flycheck-javascript-eslint-executable
            (and (file-exists-p local-eslint) local-eslint))))
</code></pre>

<p>(Note: the function is interactive because I found at least a few
times I was looking at a JavaScript file which I had come to <em>not</em> via
projectile. By making it interactive lets me use it manually in the
rare case I need to.)</p>

<p>Flycheck’s ESLint integration is limited to only certain modes and
<code>web-mode</code> is not one of them so I needed to add that to the
white-list of modes</p>

<pre><code class="language-lisp">  (with-eval-after-load 'flycheck
    (push 'web-mode (flycheck-checker-get 'javascript-eslint 'modes))))
</code></pre>

<p>With that I can easily write React/ReactNative code with all the bells
and whistles I like.</p>

<p>Later I will add support for building and testing I’m sure. But first
I need to determine what building &amp; testing in a ReactNative
environment will even look like.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gnus configuration (2.5 of N) - Spam Splitting]]></title>
    <link href="http://code-and-cocktails.heroku.com/blog/2011/12/07/gnus-configuration-25-of-n-spam-splitting/"/>
    <updated>2011-12-07T00:00:00-05:00</updated>
    <id>http://code-and-cocktails.heroku.com/blog/2011/12/07/gnus-configuration-25-of-n-spam-splitting</id>
    <content type="html"><![CDATA[<p>An addendum to follow up on how to fix an item that was giving me a
problem before.</p>

<p>In order to get ham &amp; spam moved and processed as such when you mark it
you need to set up additional group parameters:</p>

<div class="CodeRay">
  <div class="code"><pre>'((&quot;nnfolder.*&quot;
 (spam-contents gnus-group-spam-classification-ham)
 (spam-process (ham spam-use-bogofilter)
           (spam spam-use-bogofilter))
 (spam-process-destination &quot;nnfolder:spam.spam&quot;))
(&quot;spam.spam&quot;
 (spam-contents gnus-group-spam-classification-spam)
 (spam-process (spam spam-use-bogofilter)
           (ham spam-use-bogofilter))
 (ham-process-destination &quot;nnfolder:mail.misc&quot;))</pre></div>
</div>

<p>Specifically the <code>spam-process-destination</code> and
<code>ham-process-destination</code> pair.  These cause the mail to be moved from
the ham to spam groups and /visa versa/.</p>

<p>One problem still remains &ndash; the bogofilter still doesn&rsquo;t seem to be
doing anything.  I don&rsquo;t see any evidence that it is being called in the
`<em>Messages</em> buffer either.</p>

<p>So the score is:</p>

<ol>
<li>Bogofilter not being called when groups exited</li>
<li>Wish I could get BBDB to work.</li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gnus configuration (2 of N) - Spam splitting]]></title>
    <link href="http://code-and-cocktails.heroku.com/blog/2011/12/06/gnus-configuration-2-of-n-spam-splitting/"/>
    <updated>2011-12-06T00:00:00-05:00</updated>
    <id>http://code-and-cocktails.heroku.com/blog/2011/12/06/gnus-configuration-2-of-n-spam-splitting</id>
    <content type="html"><![CDATA[<h2>Setting up Splitting</h2>

<p>The next thing I felt I needed to set up was spam splitting.  I didn&rsquo;t
want obvious spam being dumped into my inbox anymore.</p>

<p>To set up spam splitting you need to be using <a href="http://www.gnu.org/s/emacs/manual/html_node/gnus/Fancy-Mail-Splitting.html#Fancy-Mail-Splitting">Fancy
Splitting</a>.  Then you add <code>(: spam-split)</code> to you fancy split
rules. At this point you have something like:</p>

<div class="CodeRay">
  <div class="code"><pre>(setq nnmail-split-methods 'nnmail-split-fancy
         nnmail-split-fancy '(| (: spam-split)
                                &quot;mail.misc&quot;))</pre></div>
</div>

<p>You also have to call <code>spam-initialize</code> to make it start working.</p>

<p>/However/ one has to do a little more.  You have to specify which spam
back ends you want to use.  Since my <a href="http://theworld.com/">ISP</a> runs
<a href="http://spamassassin.apache.org/">SpamAssassin</a> I chose to use
<code>spam-use-spamassassin-headers</code>.  Setting this to <code>t</code> makes the spam
package check for the <code>X-Spam-Status: YES</code> header.  (There are plenty of
choices so check out the <a href="http://www.gnu.org/s/emacs/manual/html_node/gnus/Spam-Back-Ends.html#Spam-Back-Ends">doc</a>)</p>

<h2>What didn&rsquo;t work quite right</h2>

<p>I also wanted to use <a href="http://bogofilter.sourceforge.net/">Bogofilter</a> so that my local machine
could learn to identify stuff that my upstream Spamassassin did not.
However I&rsquo;m not sure if that is working correctly.  My Bogofilter
database file is still zero size.</p>

<p>To get a spam back end to process spam and ham when you are done reading
a group you need to add some group parameters.  So I set:</p>

<div class="CodeRay">
  <div class="code"><pre>(setq gnus-parameters
       '((&quot;nnfolder.*&quot;
          (spam-contents gnus-group-spam-classification-ham)
          (spam-process (ham spam-use-bogofilter)))
         (&quot;spam.spam&quot;
          (spam-contents gnus-group-spam-classification-spam)
          (spam-process (spam spam-use-bogofilter)))
        ...</pre></div>
</div>

<p>But like I said that doesn&rsquo;t appear to be working.  I&rsquo;m probably just
missing something small that is mentioned in the documentation.</p>

<h2>What seems to be broken</h2>

<p>Before my nuke and pave (and upgrade to emacs v24) I was using
<a href="http://bbdb.sourceforge.net/">BBDB</a> as a whitelist.  So if you were not in my BBDB then you
went to spam.  However with v24 when I try to use BBDB I get an error
saying that <code>bbdb-search</code> is undefined.  It /is/ defined in
<code>bbdb-com.el</code> however so I am not sure what is wrong.  I&rsquo;m going to
investigate a bit more and post a question on <code>gmane.emacs.gnus.general</code>
and <code>gmane.emacs.gnus.user</code> (maybe also <code>gmane.emacs.bbdb.user</code>).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[There comes a time in every Emacs-user's life when...]]></title>
    <link href="http://code-and-cocktails.heroku.com/blog/2011/12/02/there-comes-a-time-in-every-emacs-users-life/"/>
    <updated>2011-12-02T00:00:00-05:00</updated>
    <id>http://code-and-cocktails.heroku.com/blog/2011/12/02/there-comes-a-time-in-every-emacs-users-life</id>
    <content type="html"><![CDATA[<p>&hellip;you just need to nuke-and-pave your configuration.</p>

<p>That time has come for me &ndash; especially with respect to my <a href="http://gnus.org">GNUS</a>
configuration. I&rsquo;ve been using GNUS to read <a href="http://en.wikipedia.org/wiki/Usenet">news</a> since
probably 1990 or earlier, before then I remember using <a href="http://en.wikipedia.org/wiki/Rn_(newsreader)">rn</a>.</p>

<p>As for <a href="http://en.wikipedia.org/wiki/Email">email</a> I&rsquo;ve used <a href="http://www.emacswiki.org/emacs/Rmail">RMAIL</a> and <a href="http://www.emacswiki.org/emacs/CategoryViewMail">VM</a>.  I don&rsquo;t
remember exactly when I switched GNUS but it has been probably at least
5 years.</p>

<p>Over that time my <a href="http://www.gnus.org/manual/gnus_11.html#SEC11">gnus init file</a> has grown pretty hairy.
It is time for a shave.</p>

<p>Over the last week I&rsquo;ve switched to a pretest release of Emacs v24 and
during that time I cleaned out a lot of configuration &ndash; but feared to clean out
much of my gnus configuration.  However in trying to get the spam checking
working better I realized that a nuke-and-pave is probably the best
thing to do now.</p>

<p>So I am about to remove nearly ALL of my gnus configuration.  Pray for me.</p>

<p>p.s. I&rsquo;ll try to blog about my luck or lack-there-of.  And also any
interesting bits I discover along the way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GNUS configuration note 1 (of N)]]></title>
    <link href="http://code-and-cocktails.heroku.com/blog/2011/12/02/gnus-configuration-note-1-of-n/"/>
    <updated>2011-12-02T00:00:00-05:00</updated>
    <id>http://code-and-cocktails.heroku.com/blog/2011/12/02/gnus-configuration-note-1-of-n</id>
    <content type="html"><![CDATA[<p>So far I have flailed around moving my email to a different structure.
I have been using <code>nnmail-use-long-file-names</code> set to <code>t</code> up until now.
But I decided to try it out with the default value of <code>nil</code>.</p>

<p>I had several problems this evening</p>

<ul>
<li><p>Sent mail was going to <code>nnfolder+nnfolder</code> instead of
<code>nnfolder+archive</code> as advertised.  I think that this may have been
caused by old settings in my <code>.newsrc.eld</code>.  After mucking about in
there I started getting my sent mail in the right place.</p></li>
<li><p>Not sure how it happened but the system acted as if
<code>nnfolder-directory</code> was set to <code>~/News/nnfolder</code> but then suddenly
switched to <code>~/Mail/</code>.  I got that all sorted out (now set to
<code>~/News/mail</code>) but it took some time and my brain didn&rsquo;t figure out
how it was working for while.  The important part here is if you move
a mail file you must also move/edit the <code>active</code> file to list that
mail group.</p></li>
</ul>

<p>Some of the problems may have been caused by a rather cavalier attitude
to the task.  If I had sat down to do it more carefully and slowly it
could have gone more smoothly.</p>

<p>No mail was lost so I am happy. But the system as it is currently
configured is definitely not the way I want to keep it.  Things to do
next:</p>

<ul>
<li>spam handling</li>
<li>expiry for archving (which I conflate that with sent mail processing)</li>
<li>splitting (but less splitting than I was doing previously)</li>
</ul>

<p>But now&hellip; time for sleep.</p>
]]></content>
  </entry>
  
</feed>
